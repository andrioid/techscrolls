---
import { getAdminStats, getModerationPosts } from "@andrioid/atproto";
import Layout from "~astro/layout.astro";
import PageLayout from "~astro/page-layout.astro";
import { BskyPostList } from "~react/bluesky/post-list";
const at = Astro.locals.at;
const url = new URL(Astro.request.url);
const query = url.searchParams.get("query");
const minscore = url.searchParams.get("minscore")
  ? Number(url.searchParams.get("minscore"))
  : 50;
const maxscore = url.searchParams.get("maxscore")
  ? Number(url.searchParams.get("maxscore"))
  : 100;
const page = url.searchParams.get("page")
  ? Number(url.searchParams.get("page"))
  : 1;

const dat = await getAdminStats(at);
const posts = await getModerationPosts(at, {
  query: query ? query : "",
  minScore: minscore,
  maxScore: maxscore,
  page: page,
});
const nurl = new URL(url);
const nextPageNumber = page + 1;
nurl.searchParams.set("page", `${nextPageNumber}`);
const nextPage = nurl.toString();
const scoreOptions = [1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];
---

<Layout>
  <PageLayout title="Admin Dashboard">
    <form>
      <div class="flex flex-row gap-2">
        <div class="flex flex-row gap-4 items-center">
          <input
            placeholder="Search for post texts"
            value={query ?? ""}
            name="query"
            type="text"
            class="rounded-md border py-1.5 px-2"
          />

          <input type="hidden" name="page" value={page} />
          <span>
            <select
              name="minscore"
              aria-valuemax="100"
              aria-valuemin="1"
              class="border rounded-md py-1.5 px-3 bg-gray-100"
            >
              {
                scoreOptions.map((score) => (
                  <option selected={minscore === score} value={score}>
                    {score}%
                  </option>
                ))
              }
            </select>
            -
            <select
              name="maxscore"
              aria-valuemax="100"
              aria-valuemin="1"
              class="border rounded-md py-1.5 px-3 bg-gray-100"
            >
              {
                scoreOptions.map((score) => (
                  <option selected={maxscore === score} value={score}>
                    {score}%
                  </option>
                ))
              }
            </select>
          </span>

          <button
            class="py-1.5 px-3 border rounded-md hover:text-sky-800"
            type="submit">Search</button
          >
        </div>
      </div>
    </form>
    <div class="flex flex-row gap-4">
      {
        dat.map((d) => (
          <div class="rounded-md border p-3 flex-col flex gap-2 text-center">
            <div class="text-xs uppercase">{d.label}</div>
            <span class="font-semibold text-sky-900">{d.value}</span>
          </div>
        ))
      }
    </div>
    <BskyPostList
      client:only="react"
      postUris={posts.map((p) => p.postId)}
      mayClassify={true}
    >
      <div slot="fallback">Loading</div>
    </BskyPostList>
    <div>
      <a href={nextPage}
        ><button class="py-1.5 px-3 rounded-md bg-gray-100 hover:text-sky-800"
          >Next page</button
        ></a
      >
    </div>
  </PageLayout>
</Layout>
